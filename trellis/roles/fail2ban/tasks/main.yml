---
- name: ensure fail2ban is installed
  apt:
    name: "{{ fail2ban_package }}"
    state: "{{ fail2ban_package_state | default(apt_security_package_state) }}"
    cache_valid_time: "{{ apt_cache_valid_time }}"
  notify:
    - restart fail2ban

- name: ensure fail2ban is configured
  template:
    src: "{{ item }}.j2"
    dest: /etc/fail2ban/{{ item }}
    mode: '0644'
  loop:
    - jail.local
    - fail2ban.local
  notify:
    - restart fail2ban

- name: Check if fail2ban_filter_templates_path exists
  stat:
    path: "{{ fail2ban_filter_templates_path }}"
  become: no
  delegate_to: localhost
  register: fail2ban_filter_templates_path_result

- name: build list of fail2ban filter templates
  find:
    paths: "{{ fail2ban_filter_templates_path_result.stat.isdir is defined | ternary(
        [fail2ban_builtin_filter_templates_path, fail2ban_filter_templates_path],
        [fail2ban_builtin_filter_templates_path]
      ) }}"
    pattern: "*.conf.j2"
  become: no
  delegate_to: localhost
  register: fail2ban_filter_templates

- name: ensure configuration directory exists
  file:
    path: /etc/fail2ban/filter.d/
    state: directory
    mode: '0755'

- name: template fail2ban filters
  template:
    src: "{{ item }}"
    dest: "/etc/fail2ban/filter.d/{{ item | basename | regex_replace('.j2$', '') }}"
    mode: '0644'
  loop: "{{ fail2ban_filter_templates.files | map(attribute='path') | list | sort(True) }}"
  notify: restart fail2ban

- name: ensure fail2ban starts on a fresh reboot
  service:
    name: fail2ban
    state: started
    enabled: yes
