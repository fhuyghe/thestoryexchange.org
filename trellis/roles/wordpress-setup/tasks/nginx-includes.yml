---
- name: Build list of Nginx includes templates
  find:
    paths:
      - "{{ nginx_includes_templates_path }}"
    pattern: "*.conf.j2"
    recurse: yes
  become: no
  delegate_to: localhost
  register: nginx_includes_templates

- name: Create includes.d directories
  file:
    path: "{{ nginx_path }}/includes.d/{{ item }}"
    state: directory
    mode: '0755'
  with_items: "{{ nginx_includes_templates.files | map(attribute='path') |
                  map('regex_replace', nginx_includes_pattern, '\\2') |
                  map('dirname') | unique | list | sort
               }}"
  when: nginx_includes_templates.files | count

- name: Template files out to includes.d
  template:
    src: "{{ item }}"
    dest: "{{ nginx_path }}/includes.d/{{ item | regex_replace(nginx_includes_pattern, '\\2') }}"
    mode: '0644'
  with_items: "{{ nginx_includes_templates.files | map(attribute='path') | list | sort(True) }}"
  notify: reload nginx

- name: Retrieve list of existing files in includes.d
  find:
    paths: "{{ nginx_path }}/includes.d"
    pattern: "*.conf"
    recurse: yes
  register: nginx_includes_existing
  when: nginx_includes_d_cleanup | bool

- name: Remove unmanaged files from includes.d
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_includes_existing.files | default({}) | map(attribute='path') |
                  difference(nginx_includes_templates.files | map(attribute='path') |
                    map('regex_replace', nginx_includes_pattern, nginx_path + '/includes.d/\\2') | unique
                  ) | list
               }}"
  when: nginx_includes_d_cleanup
  notify: reload nginx
