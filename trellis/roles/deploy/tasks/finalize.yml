---
- name: Check if deploy_finalize_before scripts exist
  stat:
    path: "{{ item }}"
  delegate_to: localhost
  register: deploy_finalize_before_paths
  loop: "{{ deploy_finalize_before | default([]) }}"

- include_tasks: "{{ include_path.item }}"
  loop: "{{ deploy_finalize_before_paths.results }}"
  loop_control:
    loop_var: include_path
    label: "{{ include_path.item }}"
  when: include_path.stat.exists
  tags: deploy-finalize-before

- name: Finalize the deploy
  deploy_helper:
    current_path: "{{ project_current_path }}"
    path: "{{ project_root }}"
    release: "{{ deploy_helper.new_release }}"
    state: finalize
    keep_releases: "{{ project.deploy_keep_releases | default(deploy_keep_releases | default(omit)) }}"

- name: Check if deploy_finalize_after scripts exist
  stat:
    path: "{{ item }}"
  delegate_to: localhost
  register: deploy_finalize_after_paths
  loop: "{{ deploy_finalize_after | default([]) }}"

- include_tasks: "{{ include_path.item }}"
  loop: "{{ deploy_finalize_after_paths.results }}"
  loop_control:
    loop_var: include_path
    label: "{{ include_path.item }}"
  when: include_path.stat.exists
  tags: deploy-finalize-after

- debug:
    msg: "{{ project_version }}@{{ git_clone.after | truncate(7, True, '') }} deployed as release {{ deploy_helper.new_release }}"
